# Sample Massive Platform nginx configuration file
# Place in /etc/nginx/sites-enabled/localdev.massiveplatform.com.conf to get started
server {

    listen 443 http2 ssl;

    # server_name ~\.?(?<domain>.+)$;
    server_name localhost localdev.massiveplatform.com;
    server_name_in_redirect off;

    # ssl
    # example command to create self-signed certificate for testing
    # sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx-selfsigned.key -out /etc/nginx/ssl/nginx-selfsigned.crt
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    access_log  /var/log/nginx/localdev.massiveplatform.com.access.log;
    error_log  /var/log/nginx/localdev.massiveplatform.com.error.log;

    root   /var/www/massiveplatform;
    index  index.php index.html index.htm;
    autoindex off;

    client_max_body_size 16m;

    #error_page  404  /404.html;
    #error_page   500 502 503 504  /50x.html;

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one

    location ~ /\.ht {
        deny  all;
    }

    # Enable compression
    gzip_static on;

    location = /favicon.ico {
            log_not_found off;
            access_log off;
    }

    location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
    }

    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
            allow 192.168.0.0/16;
            deny all;
    }

    location ~ \..*/.*\.php$ {
            return 403;
    }

    # No no for private
    location ~ ^/sites/.*/private/ {
            return 403;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
            return 403;
    }


#    # Blog
#    # If hosting wordpress under /blog
#    location /blog {
#
#            # require password
#            # auth_basic            "Massive Platform";
#            # auth_basic_user_file  htpasswd;
#
#            if (!-e $request_filename) {
#                   rewrite  ^(.*)$  /blog/index.php?q=$1  last;
#                   break;
#
#            }
#    }

    # Drupal
    location / {
            # This is cool because no php is touched for static content
            try_files $uri @rewrite;

            # require password
            # auth_basic            "Massive Platform";
            # auth_basic_user_file  htpasswd;
    }

    location @rewrite {
            # Clean URLs are handled in drupal_environment_initialize().
            rewrite ^ /index.php;
    }

    location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_intercept_errors on;
	    fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    }

    location ~ ^/sites/.*/files/styles/ {
            try_files $uri @rewrite;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
    }

}
