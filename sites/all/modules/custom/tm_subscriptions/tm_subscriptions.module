<?php

/**
 * @file
 * Code for the tm_subscriptions feature.
 */

include_once 'tm_subscriptions.features.inc';
/**
 * @file
 * Code for the TM Subscriptions feature.
 */

include_once 'tm_subscriptions.permissions.inc';
include_once 'tm_subscriptions.display.inc';
include_once 'tm_subscriptions.process.inc';
include_once 'tm_subscriptions.helpers.inc';
include_once 'tm_subscriptions.pricing.inc';
include_once 'tm_subscriptions.notifications.inc';
include_once 'tm_subscriptions.reports.inc';


/* 
Stripe Payments Module
You will also need stripe-payments repository installed into /payments and hosted on another server.
*/

function tm_subscriptions_menu() {

	global $conf;

	$items = array();
	$items['payment/subscription-organization/%node/%user'] = array(
    'title' => 'Entity payment',
    'page callback' => 'tm_subscriptions_process_organization_payment',
    'page arguments' => array(2,3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['payment/reports/subscription-payments/%node'] = array(
    'title' => 'Subscription payments',
    'page callback' => 'tm_subscriptions_reports_organization_payments',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

	return $items;
}

/**
 * Implement hook_ds_field_info()
 */
// see: https://ohthehugemanatee.org/blog/2014/04/02/how-to-create-a-custom-display-suite-field/
function tm_subscriptions_ds_fields_info($entity_type) {

  if ($entity_type != 'node') {
    return;
  }
  
  $fields = array();

  // call to action
  $fields['tm_ds_subscription_organization_cta_ds'] = array(
    'title' => t('Company Subscription CTA'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'ui_limit' => array('organization|full',),
    'function' => '_tm_subscriptions_organization_cta_ds'
  );

  // show subscription badge
  $fields['tm_ds_subscription_organization_badge_ds'] = array(
    'title' => t('Company Subscription Badge'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'ui_limit' => array('organization|full',),
    'function' => '_tm_subscriptions_organization_badge_ds'
  );

  return array($entity_type => $fields);
}

/**
 * Modify node
 */
function tm_subscriptions_node_view_alter(&$build) {

  global $user;

  // check user logged in
  if (!(user_is_logged_in())) {
    return;
  }

  // check view mode
  if ($build['#view_mode'] != "full") {
    return;
  }

  // check object
  if (!isset($build['body']['#object'])) {
    return;
  }

  // get node
  $node = $build['body']['#object'];

  // organization cta
  if ($node->type == "organization") {

    if (tm_subscriptions_check_show_organization_cta($node->nid, $user->uid)) {

      // Add Stripe js and pricing
      // (CTA html is rendered from themes/tm/trilithon/trilithon.tpl.php)
      tm_subscriptions_organization_cta_js($node->nid);
    }
  }

}

/**
 * Customize organization edit form 
 */
function tm_subscriptions_form_alter(&$form, $form_state, $form_id) {

  global $conf;
  global $user;

  // Modify company edit form
  if ($form_id != 'organization_node_form') {
    return;
  }

  // Don't show if ajax request (ie: saving image)
  $ajax_request = false;
  if (strpos(current_path(), 'ajax') !== false) {
      $ajax_request = true;
  }

  // if tm_subscriptions not enabled, hide all subscription fields
  if ($conf["tm_subscriptions_organization_enabled"] == false) {
    field_group_hide_field_groups($form, array('group_company_account_details'));
    unset($form['field_company_subscription_type']);
    unset($form['field_company_subscription_date']);
  }

  // Show Account Details for subscribers
  $organization = $form_state['node'];
  $is_new_organization = (!isset($organization->nid) || isset($organization->is_new));
  $perm_is_moderator_or_admin = ((in_array("moderator", $user->roles)) || (in_array("administrator", $user->roles)));

  // Hide company account details and subscription date if subscriptions not enabled or new organization
  if ($is_new_organization) {
    field_group_hide_field_groups($form, array('group_company_account_details'));
    unset($form['field_company_subscription_date']); // hide subscription end date
    return;
  }

  // Hide company account details and subscription date if not a moderator or admin or not subscribed
  if ((!tm_subscriptions_is_organization_subscription_enabled($organization->nid)) and
    (!$perm_is_moderator_or_admin)) {

    field_group_hide_field_groups($form, array('group_company_account_details'));
    unset($form['field_company_subscription_date']); // hide subscription end date
    return;
  }

  // Set field group title
  $form['#groups']['group_company_account_details']->label = $conf["tm_subscriptions_organization_label"] . " Details";

  // Include subscription date

  // check that organization has subscription date
  $subscription_date = tm_subscriptions_get_subscription_date($organization);
  $subscription_date_text = date('Y-m-d', strtotime($subscription_date));
  $expires_text = tm_subscriptions_get_subscription_expires_text($organization);

  if ($subscription_date != "") {
    $subscription_message = "Your " . $conf["tm_subscriptions_organization_label"] . " is registered until " . $subscription_date_text . " (" . $expires_text . ")";
    $form['#groups']['group_company_account_details']->format_settings['instance_settings']['description'] .= "<a name='company-account-details'/><br>" . $subscription_message;
    if (!$ajax_request) { 
      drupal_set_message($subscription_message, 'help-tip');
    }
  }
 
 
  $organization_owner = user_load($organization->uid);

  // Set default contact
  if (!isset($organization->field_company_account_contact[LANGUAGE_NONE][0]['value'])) {
    $form["field_company_account_contact"][LANGUAGE_NONE][0]['value']['#default_value'] = $organization_owner->field_user_first_name[LANGUAGE_NONE][0]['safe_value'] . " " . $organization_owner->field_user_last_name[LANGUAGE_NONE][0]['safe_value'];
  }

  // Set default contact
  if (!isset($organization->field_company_account_email[LANGUAGE_NONE][0]['email'])) {
    $form["field_company_account_email"][LANGUAGE_NONE][0]['email']['#default_value'] = $organization_owner->mail;
  }

  // Hide subscription type and end date
  if (!$perm_is_moderator_or_admin) {
    unset($form['field_company_subscription_type']); // hide subscription type
    unset($form['field_company_subscription_date']); // hide subscription end date
  } else {
    // if payment has been made, warn in toggle settings 
  }
}
